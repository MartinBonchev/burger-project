{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","el","style","display","margin","border","padding","className","classes","Order","customer","street","zipCode","country","freeDrink","price","toFixed","Orders","this","onFetchOrders","token","userId","loading","Spinner","orders","orderData","deliveryDuration","duration","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,4B,wHCgDXC,EA9CD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAMC,KAAkBF,EAAMC,YACjCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,uBAEEC,MAAO,CACLC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OANb,UASGL,EAAGJ,KATN,KAScI,EAAGH,OATjB,MACOG,EAAGJ,SAYd,OACE,sBAAKU,UAAWC,IAAQC,MAAxB,UACE,6BAAKhB,EAAMiB,SAASb,OACpB,yCACWJ,EAAMiB,SAASC,OAD1B,IACmClB,EAAMiB,SAASE,QADlD,IAEGnB,EAAMiB,SAASG,WAElB,6CAAgBd,KACfN,EAAMiB,SAASI,UACd,kDACmB,iCAASrB,EAAMiB,SAASI,eAG3C,uDAEF,wCACS,mCAASrB,EAAMsB,MAAMC,QAAQ,GAA7B,c,wBCpCTC,E,wKACJ,SAAmBxB,GACjByB,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,U,oBAGxD,WACE,OACE,8BACIH,KAAKzB,MAAM6B,QAaX,cAACC,EAAA,EAAD,IAZAL,KAAKzB,MAAM+B,OAAOxB,KAAI,SAACC,GACrB,OACE,cAAC,EAAD,CAEEP,YAAaO,EAAGP,YAChBqB,MAAOd,EAAGc,MACVL,SAAUT,EAAGwB,UACbC,iBAAkBzB,EAAG0B,UAJhB1B,EAAG2B,a,GAZHC,aAuCNC,uBAXS,SAACC,GAAD,MAAY,CAClCP,OAAQO,EAAMvC,MAAMgC,OACpBF,QAASS,EAAMvC,MAAM8B,QACrBF,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,WAGM,SAACY,GAAD,MAAe,CACxCd,cAAe,SAACC,EAAOC,GAAR,OACbY,EAASC,IAAsBd,EAAOC,QAE3BS,CAGbK,YAAiBlB,EAAQmB","file":"static/js/5.99ed24e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_2n5n7ltrIf4uIwFQyPu5qS\"};","import React from \"react\";\nimport classes from \"./Order.css\";\n\nconst order = (props) => {\n  const ingredients = [];\n  for (const ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName],\n    });\n  }\n\n  const ingredientOutput = ingredients.map((el) => {\n    return (\n      <span\n        key={el.name}\n        style={{\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n        }}\n      >\n        {el.name} ({el.amount})\n      </span>\n    );\n  });\n  return (\n    <div className={classes.Order}>\n      <h4>{props.customer.name}</h4>\n      <p>\n        Adress: {props.customer.street},{props.customer.zipCode},\n        {props.customer.country}\n      </p>\n      <p>Ingredients:{ingredientOutput}</p>\n      {props.customer.freeDrink ? (\n        <p>\n          Your free drink: <strong>{props.customer.freeDrink}</strong>\n        </p>\n      ) : (\n        <p>No free drink ordered!</p>\n      )}\n      <p>\n        Price: <strong>{props.price.toFixed(2)}$</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nclass Orders extends Component {\n  componentWillMount(props) {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.props.loading ? (\n          this.props.orders.map((el) => {\n            return (\n              <Order\n                key={el.id}\n                ingredients={el.ingredients}\n                price={el.price}\n                customer={el.orderData}\n                deliveryDuration={el.duration}\n              />\n            );\n          })\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token,\n  userId: state.auth.userId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchOrders: (token, userId) =>\n    dispatch(actions.fetchedOrders(token, userId)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}