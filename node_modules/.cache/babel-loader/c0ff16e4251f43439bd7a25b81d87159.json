{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return { ...state,\n        purchased: false\n      };\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = { ...action.orderData,\n        id: action.orderId\n      };\n      return { ...state,\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return { ...state,\n        loading: false\n      };\n\n    case actionTypes.FECTHED_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FECTHED_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.orders\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducers/order.js"],"names":["actionTypes","initialState","orders","loading","reducer","state","action","type","PURCHASE_INIT","purchased","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FECTHED_ORDERS_START","FECTHED_ORDERS_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,aAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,WAAW,CAACU,qBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,WAAW,CAACW,uBAAjB;AACE,YAAMC,QAAQ,GAAG,EACf,GAAGN,MAAM,CAACO,SADK;AAEfC,QAAAA,EAAE,EAAER,MAAM,CAACS;AAFI,OAAjB;AAIA,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLM,QAAAA,SAAS,EAAE,IAHN;AAILP,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAJH,OAAP;;AAMF,SAAKZ,WAAW,CAACiB,oBAAjB;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKH,WAAW,CAACkB,oBAAjB;AACE,aAAO,EAAE,GAAGb,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKH,WAAW,CAACmB,sBAAjB;AACE,aAAO,EAAE,GAAGd,KAAL;AAAYH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAA3B,OAAP;;AACF;AACE,aAAOG,KAAP;AA7BJ;AA+BD,CAhCD;;AAiCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return {\n        ...state,\n        purchased: false,\n      };\n    case actionTypes.PURCHASE_BURGER_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = {\n        ...action.orderData,\n        id: action.orderId,\n      };\n      return {\n        ...state,\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder),\n      };\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return { ...state, loading: false };\n    case actionTypes.FECTHED_ORDERS_START:\n      return { ...state, loading: true };\n    case actionTypes.FECTHED_ORDERS_SUCCESS:\n      return { ...state, orders: action.orders };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}