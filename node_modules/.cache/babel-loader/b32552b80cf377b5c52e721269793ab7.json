{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 4,\n      durationTime: 0,\n      perchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatesIngredients = { ...this.state.ingredients\n      };\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatesIngredients\n      }); //this.updatePerchaseState(updatesIngredients);\n      //this.deliveryDurationCalculator(updatesIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatesIngredients = { ...this.state.ingredients\n      };\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatesIngredients\n      }); //this.updatePerchaseState(updatesIngredients);\n      // this.deliveryDurationCalculator(updatesIngredients);\n    };\n\n    this.checkoutNow = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // //alert(\"You continue!\");\n      const queryParams = [];\n\n      for (const i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      queryParams.push(\"duration=\" + this.state.durationTime);\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryParams.join(\"&\")\n      });\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  } // updatePerchaseState(ingredients) {\n  //   const sum = Object.values(ingredients).reduce((acc, curr) => {\n  //     return acc + curr;\n  //   }, 0);\n  //   this.setState({ perchasable: sum > 0 });\n  // }\n\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          perchasable: !this.state.perchasable,\n          checkout: this.checkoutNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.state.totalPrice,\n        durationTime: this.state.durationTime,\n        closeModal: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.loading) orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 44\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","withErrorHandler","Spinner","actionTypes","connect","INGREDIENT_PRICES","Salad","Cheese","Bacon","Meat","BurgerBuilder","state","totalPrice","durationTime","perchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","ingredients","updatedCount","updatesIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","checkoutNow","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","props","history","pathname","search","join","componentWillMount","get","then","response","data","catch","render","disabledInfo","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    totalPrice: 4,\n    durationTime: 0,\n    perchasable: false,\n    purchasing: false,\n    loading: false,\n    error: false,\n  };\n  componentWillMount() {\n    axios\n      .get(\n        \"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\"\n      )\n      .then((response) => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch((error) => {\n        this.setState({\n          error: true,\n        });\n      });\n  }\n  // updatePerchaseState(ingredients) {\n  //   const sum = Object.values(ingredients).reduce((acc, curr) => {\n  //     return acc + curr;\n  //   }, 0);\n  //   this.setState({ perchasable: sum > 0 });\n  // }\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatesIngredients = {\n      ...this.state.ingredients,\n    };\n    updatesIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatesIngredients });\n    //this.updatePerchaseState(updatesIngredients);\n    //this.deliveryDurationCalculator(updatesIngredients);\n  };\n  // deliveryDurationCalculator = (ingredients) => {\n  //   let totalIngredients = 0;\n  //   let duration = null;\n  //   // for (const ingredient in ingredients) {\n  //   //   totalIngredients += ingredients[ingredient];\n  //   // }\n  //   totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n  //     return acc + Number(curr);\n  //   }, 0);\n\n  //   if (totalIngredients >= 1) duration = 15;\n  //   if (totalIngredients >= 4) duration = 20;\n  //   if (totalIngredients >= 6) duration = 30;\n  //   if (totalIngredients >= 10) duration = 60;\n  //   this.setState({\n  //     durationTime: duration,\n  //   });\n  // };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatesIngredients = {\n      ...this.state.ingredients,\n    };\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    updatesIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatesIngredients });\n    //this.updatePerchaseState(updatesIngredients);\n    // this.deliveryDurationCalculator(updatesIngredients);\n  };\n\n  checkoutNow = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n  purchaseContinueHandler = () => {\n    // //alert(\"You continue!\");\n    const queryParams = [];\n    for (const i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    queryParams.push(\"duration=\" + this.state.durationTime);\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryParams.join(\"&\"),\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients,\n    };\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.props.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ingredients} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.state.totalPrice}\n            perchasable={!this.state.perchasable}\n            checkout={this.checkoutNow}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          price={this.state.totalPrice}\n          durationTime={this.state.durationTime}\n          closeModal={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n        />\n      );\n    }\n    if (this.state.loading) orderSummary = <Spinner />;\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) =>\n      dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\n    onIngredientRemoved: (ingName) =>\n      dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName,\n      }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}