{"ast":null,"code":"export const updateObject = (oldObject, updatedProperties) => {\n  return { ...oldObject,\n    ...updatedProperties\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true; // eslint-disable-next-line\n\n  const patternEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-next-line\n\n  const patternNumeric = /^\\d+$/;\n  if (!rules) return isValid;\n  if (rules.required) isValid = value.trim() !== \"\" && isValid;\n  if (rules.minLength) isValid = value.length >= rules.minLength && isValid;\n  if (rules.maxLength) isValid = value.length <= rules.minLength && isValid;\n  if (rules.isEmail) isValid = patternEmail.test(value) && isValid;\n  if (rules.isNumeric) isValid = patternNumeric.test(value) && isValid;\n  return isValid;\n};","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","patternEmail","patternNumeric","required","trim","minLength","length","maxLength","isEmail","test","isNumeric"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,SAAD,EAAYC,iBAAZ,KAAkC;AAC5D,SAAO,EACL,GAAGD,SADE;AAEL,OAAGC;AAFE,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,MAAIC,OAAO,GAAG,IAAd,CAD6C,CAE7C;;AACA,QAAMC,YAAY,GAAG,wJAArB,CAH6C,CAI7C;;AACA,QAAMC,cAAc,GAAG,OAAvB;AACA,MAAI,CAACH,KAAL,EAAY,OAAOC,OAAP;AACZ,MAAID,KAAK,CAACI,QAAV,EAAoBH,OAAO,GAAGF,KAAK,CAACM,IAAN,OAAiB,EAAjB,IAAuBJ,OAAjC;AACpB,MAAID,KAAK,CAACM,SAAV,EAAqBL,OAAO,GAAGF,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACrB,MAAID,KAAK,CAACQ,SAAV,EAAqBP,OAAO,GAAGF,KAAK,CAACQ,MAAN,IAAgBP,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACrB,MAAID,KAAK,CAACS,OAAV,EAAmBR,OAAO,GAAGC,YAAY,CAACQ,IAAb,CAAkBX,KAAlB,KAA4BE,OAAtC;AACnB,MAAID,KAAK,CAACW,SAAV,EAAqBV,OAAO,GAAGE,cAAc,CAACO,IAAf,CAAoBX,KAApB,KAA8BE,OAAxC;AACrB,SAAOA,OAAP;AACD,CAbM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  // eslint-disable-next-line\n  const patternEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // eslint-disable-next-line\n  const patternNumeric = /^\\d+$/;\n  if (!rules) return isValid;\n  if (rules.required) isValid = value.trim() !== \"\" && isValid;\n  if (rules.minLength) isValid = value.length >= rules.minLength && isValid;\n  if (rules.maxLength) isValid = value.length <= rules.minLength && isValid;\n  if (rules.isEmail) isValid = patternEmail.test(value) && isValid;\n  if (rules.isNumeric) isValid = patternNumeric.test(value) && isValid;\n  return isValid;\n};\n"]},"metadata":{},"sourceType":"module"}