{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst asyncCheckout = asyncComponent(() => {\n  return import(\"./containers/Checkout/Checkout\");\n});\nconst asyncOrders = asyncComponent(() => {\n  return import(\"./containers/Orders/Orders\");\n});\nconst asyncAuth = asyncComponent(() => {\n  return import(\"./containers/Auth/Auth\");\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.onTryAuthSignup();\n  }\n\n  render() {\n    let routes = null;\n\n    if (this.props.isLogged) {\n      console.log(this.props.isLogged);\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: BurgerBuilder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          component: asyncCheckout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/orders\",\n          component: asyncOrders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          component: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: asyncAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLogged: state.auth.token\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAuthSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/App.js"],"names":["React","Component","Layout","BurgerBuilder","Switch","Route","withRouter","Redirect","Logout","connect","actions","asyncComponent","asyncCheckout","asyncOrders","asyncAuth","App","constructor","props","onTryAuthSignup","render","routes","isLogged","console","log","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,kBAApD;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;;AAEA,MAAMC,aAAa,GAAGD,cAAc,CAAC,MAAM;AACzC,SAAO,OAAO,gCAAP,CAAP;AACD,CAFmC,CAApC;AAGA,MAAME,WAAW,GAAGF,cAAc,CAAC,MAAM;AACvC,SAAO,OAAO,4BAAP,CAAP;AACD,CAFiC,CAAlC;AAGA,MAAMG,SAAS,GAAGH,cAAc,CAAC,MAAM;AACrC,SAAO,OAAO,wBAAP,CAAP;AACD,CAF+B,CAAhC;;AAGA,MAAMI,GAAN,SAAkBd,SAAlB,CAA4B;AAC1Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAI,KAAKH,KAAL,CAAWI,QAAf,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWI,QAAvB;AACAD,MAAAA,MAAM,gBACJ,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAES;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAXD,MAYEY,MAAM,gBACJ,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEN;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAMF,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,kBAASM;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAhCyB;;AAmC5B,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,QAAQ,EAAEI,KAAK,CAACC,IAAN,CAAWC;AADa,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,eAAe,EAAE,MAAMW,QAAQ,CAACnB,OAAO,CAACoB,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAexB,UAAU,CAACG,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst asyncCheckout = asyncComponent(() => {\n  return import(\"./containers/Checkout/Checkout\");\n});\nconst asyncOrders = asyncComponent(() => {\n  return import(\"./containers/Orders/Orders\");\n});\nconst asyncAuth = asyncComponent(() => {\n  return import(\"./containers/Auth/Auth\");\n});\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.onTryAuthSignup();\n  }\n\n  render() {\n    let routes = null;\n\n    if (this.props.isLogged) {\n      console.log(this.props.isLogged);\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    } else\n      routes = (\n        <Switch>\n          <Route path=\"/login\" component={asyncAuth} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      );\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLogged: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAuthSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}