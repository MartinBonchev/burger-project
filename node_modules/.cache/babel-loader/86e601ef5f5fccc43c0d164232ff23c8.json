{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0\n  },\n  totalPrice: 4,\n  perchasable: false,\n  durationTime: 0 // purchasing: false,\n  // loading: false,\n  // error: false,\n\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2\n};\n\nconst deliveryDurationCalculator = ingredients => {\n  let totalIngredients = null;\n  let duration = 0;\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    acc += Number(curr);\n    return acc;\n  }, 0);\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  // const duration = deliveryDurationCalculator.call(null, state.ingredients);\n  let totalIngredients = null;\n  let duration = 0;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      totalIngredients = Object.values(state.ingredients).reduce((acc, curr) => {\n        acc += Number(curr);\n        return acc;\n      }, 0);\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        durationTime: duration\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      totalIngredients = Object.values(state.ingredients).reduce((acc, curr) => {\n        acc += Number(curr);\n        return acc;\n      }, 0);\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        durationTime: duration\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","Salad","Bacon","Cheese","Meat","totalPrice","perchasable","durationTime","INGREDIENT_PRICES","deliveryDurationCalculator","totalIngredients","duration","Object","values","reduce","acc","curr","Number","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0,\n  },\n  totalPrice: 4,\n  perchasable: false,\n  durationTime: 0,\n  // purchasing: false,\n  // loading: false,\n  // error: false,\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\nconst deliveryDurationCalculator = (ingredients) => {\n  let totalIngredients = null;\n  let duration = 0;\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    acc += Number(curr);\n    return acc;\n  }, 0);\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  // const duration = deliveryDurationCalculator.call(null, state.ingredients);\n  let totalIngredients = null;\n  let duration = 0;\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      totalIngredients = Object.values(state.ingredients).reduce(\n        (acc, curr) => {\n          acc += Number(curr);\n          return acc;\n        },\n        0\n      );\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        durationTime: duration,\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      totalIngredients = Object.values(state.ingredients).reduce(\n        (acc, curr) => {\n          acc += Number(curr);\n          return acc;\n        },\n        0\n      );\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        durationTime: duration,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}