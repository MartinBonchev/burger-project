{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport axios from \"../../axios-orders\";\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios.post(\"/orders.json\", orderData).then(response => {\n      dispatch(purchaseBurgerSuccess(response.data.name));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchedOrdersSuccess = () => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_SUCCESS\n  };\n};\nexport const fetchedOrdersFail = error => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_FAIL,\n    error: error\n  };\n};\nexport const fetchedOrdersStart = () => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_START\n  };\n};\nexport const fetchedOrders = () => {\n  return dispatch => {\n    axios.get(\"/orders.json\").then(res => {\n      let fetchedOrders = [];\n      console.log(res);\n\n      for (const key in res.data) {\n        fetchedOrders.push({ ...res.data[key],\n          id: [key]\n        });\n      }\n\n      this.setState({\n        loading: false,\n        orders: fetchedOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchedOrdersSuccess","FECTHED_ORDERS_SUCCESS","fetchedOrdersFail","FECTHED_ORDERS_FAIL","fetchedOrdersStart","FECTHED_ORDERS_START","fetchedOrders","get","res","console","log","key","push","setState","loading","orders","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADb;AAELC,IAAAA,OAAO,EAAEJ,EAFJ;AAGLC,IAAAA,SAAS,EAAEA;AAHN,GAAP;AAKD,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,oBADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLN,IAAAA,IAAI,EAAEL,WAAW,CAACY;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIT,SAAD,IAAe;AAC3C,SAAQU,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,mBAAmB,EAApB,CAAR;AACAV,IAAAA,KAAK,CACFc,IADH,CACQ,cADR,EACwBX,SADxB,EAEGY,IAFH,CAESC,QAAD,IAAc;AAClBH,MAAAA,QAAQ,CAACZ,qBAAqB,CAACe,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAtB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUX,KAAD,IAAW;AAChBK,MAAAA,QAAQ,CAACN,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM;AAaP,OAAO,MAAMY,YAAY,GAAG,MAAM;AAChC,SAAO;AACLhB,IAAAA,IAAI,EAAEL,WAAW,CAACsB;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACxC,SAAO;AACLlB,IAAAA,IAAI,EAAEL,WAAW,CAACwB;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,iBAAiB,GAAIhB,KAAD,IAAW;AAC1C,SAAO;AACLJ,IAAAA,IAAI,EAAEL,WAAW,CAAC0B,mBADb;AAELjB,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAMP,OAAO,MAAMkB,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLtB,IAAAA,IAAI,EAAEL,WAAW,CAAC4B;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQf,QAAD,IAAc;AACnBb,IAAAA,KAAK,CACF6B,GADH,CACO,cADP,EAEGd,IAFH,CAESe,GAAD,IAAS;AACb,UAAIF,aAAa,GAAG,EAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,WAAK,MAAMG,GAAX,IAAkBH,GAAG,CAACb,IAAtB,EAA4B;AAC1BW,QAAAA,aAAa,CAACM,IAAd,CAAmB,EAAE,GAAGJ,GAAG,CAACb,IAAJ,CAASgB,GAAT,CAAL;AAAoB/B,UAAAA,EAAE,EAAE,CAAC+B,GAAD;AAAxB,SAAnB;AACD;;AACD,WAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,MAAM,EAAET;AAFI,OAAd;AAID,KAZH,EAaGT,KAbH,CAaUmB,GAAD,IAAS;AACd,WAAKH,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAjBH;AAkBD,GAnBD;AAoBD,CArBM","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData,\n  };\n};\n\nexport const purchaseBurgerFail = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error,\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START,\n  };\n};\n\nexport const purchaseBurger = (orderData) => {\n  return (dispatch) => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json\", orderData)\n      .then((response) => {\n        dispatch(purchaseBurgerSuccess(response.data.name));\n      })\n      .catch((error) => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT,\n  };\n};\nexport const fetchedOrdersSuccess = () => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_SUCCESS,\n  };\n};\nexport const fetchedOrdersFail = (error) => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_FAIL,\n    error: error,\n  };\n};\nexport const fetchedOrdersStart = () => {\n  return {\n    type: actionTypes.FECTHED_ORDERS_START,\n  };\n};\nexport const fetchedOrders = () => {\n  return (dispatch) => {\n    axios\n      .get(\"/orders.json\")\n      .then((res) => {\n        let fetchedOrders = [];\n        console.log(res);\n        for (const key in res.data) {\n          fetchedOrders.push({ ...res.data[key], id: [key] });\n        }\n        this.setState({\n          loading: false,\n          orders: fetchedOrders,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}