{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0\n  },\n  totalPrice: 4,\n  perchasable: false // purchasing: false,\n  // loading: false,\n  // error: false,\n\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","Salad","Bacon","Cheese","Meat","totalPrice","perchasable","INGREDIENT_PRICES","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,MAAM,EAAE,CAHG;AAIXC,IAAAA,IAAI,EAAE;AAJK,GADM;AAOnBC,EAAAA,UAAU,EAAE,CAPO;AAQnBC,EAAAA,WAAW,EAAE,KARM,CASnB;AACA;AACA;;AAXmB,CAArB;AAaA,MAAMC,iBAAiB,GAAG;AACxBN,EAAAA,KAAK,EAAE,GADiB;AAExBE,EAAAA,MAAM,EAAE,GAFgB;AAGxBD,EAAAA,KAAK,EAAE,CAHiB;AAIxBE,EAAAA,IAAI,EAAE;AAJkB,CAA1B;;AAOA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,WAAW,CAACc,cAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELT,QAAAA,WAAW,EAAE,EACX,GAAGS,KAAK,CAACT,WADE;AAEX,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLR,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmBE,iBAAiB,CAACG,MAAM,CAACG,cAAR;AAN3C,OAAP;;AAQF,SAAKf,WAAW,CAACgB,iBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELT,QAAAA,WAAW,EAAE,EACX,GAAGS,KAAK,CAACT,WADE;AAEX,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLR,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmBE,iBAAiB,CAACG,MAAM,CAACG,cAAR;AAN3C,OAAP;;AASF;AACE,aAAOJ,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0,\n  },\n  totalPrice: 4,\n  perchasable: false,\n  // purchasing: false,\n  // loading: false,\n  // error: false,\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}