{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP CODE\"\n          },\n          value: \"\"\n        },\n        country: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\"\n        },\n        freeDrink: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"cocaCola\",\n              displayValue: \"CoCa-Cola\"\n            }, {\n              value: \"fanta\",\n              displayValue: \"Fanta\"\n            }, {\n              value: \"sprite\",\n              displayValue: \"Sprite\"\n            }, {\n              value: \"beer\",\n              displayValue: \"Beer\"\n            }]\n          },\n          isWanted: true,\n          value: \"CoCa-Cola\"\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (const formElementIdentifier in this.state.orderForm) {\n        formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n      }\n\n      const order = {\n        ingredients: this.props.ingredients,\n        duration: this.props.duration,\n        price: this.props.price,\n        orderData: formData\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/\");\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  inputChangedHandler(event, inputIdentifier) {\n    const updatedOrderForm = { ...this.state.orderForm\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    this.setState({\n      orderForm: updatedOrderForm\n    });\n  }\n\n  drinkWantedHandler() {\n    console.log(\"hi\");\n  }\n\n  render() {\n    let formElementsArray = [];\n\n    for (const key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = null;\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }, this);\n    } else {\n      form = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.orderHandler,\n        children: [formElementsArray.map(formElement => {\n          return /*#__PURE__*/_jsxDEV(Input, {\n            elementType: formElement.config.elementType,\n            elementConfig: formElement.config.elementConfig,\n            value: formElement.config.value,\n            change: event => this.inputChangedHandler(event, formElement.id)\n          }, formElement.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          clicked: this.orderHandler,\n          children: \"ORDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContactData,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Contact Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","street","zipCode","country","email","freeDrink","options","displayValue","isWanted","loading","orderHandler","event","preventDefault","setState","formData","formElementIdentifier","order","ingredients","props","duration","price","orderData","post","then","response","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","drinkWantedHandler","console","log","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\",\n        },\n        value: \"\",\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP CODE\",\n        },\n        value: \"\",\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\",\n        },\n        value: \"\",\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\",\n        },\n        value: \"\",\n      },\n      freeDrink: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"cocaCola\", displayValue: \"CoCa-Cola\" },\n            { value: \"fanta\", displayValue: \"Fanta\" },\n            { value: \"sprite\", displayValue: \"Sprite\" },\n            { value: \"beer\", displayValue: \"Beer\" },\n          ],\n        },\n        isWanted: true,\n        value: \"CoCa-Cola\",\n      },\n    },\n\n    loading: false,\n  };\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n    for (const formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      duration: this.props.duration,\n      price: this.props.price,\n      orderData: formData,\n    };\n    axios\n      .post(\"/orders.json\", order)\n      .then((response) => {\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n      });\n  };\n  inputChangedHandler(event, inputIdentifier) {\n    const updatedOrderForm = {\n      ...this.state.orderForm,\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n\n    updatedFormElement.value = event.target.value;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm });\n  }\n\n  drinkWantedHandler() {\n    console.log(\"hi\");\n  }\n\n  render() {\n    let formElementsArray = [];\n    for (const key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key],\n      });\n    }\n\n    let form = null;\n    if (this.state.loading) {\n      form = <Spinner />;\n    } else {\n      form = (\n        <form onSubmit={this.orderHandler}>\n          {formElementsArray.map((formElement) => {\n            return (\n              <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                change={(event) =>\n                  this.inputChangedHandler(event, formElement.id)\n                }\n              />\n            );\n          })}\n          <Button btnType=\"Success\" clicked={this.orderHandler}>\n            ORDER\n          </Button>\n        </form>\n      );\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}