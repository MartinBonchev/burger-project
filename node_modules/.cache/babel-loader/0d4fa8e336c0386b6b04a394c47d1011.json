{"ast":null,"code":"import _objectSpread from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var updateObject=function updateObject(oldObject,updatedProperties){return _objectSpread(_objectSpread({},oldObject),updatedProperties);};export var checkValidity=function checkValidity(value,rules){var isValid=true;// eslint-disable-next-line\nvar patternEmail=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;// eslint-disable-next-line\nvar patternNumeric=/^\\d+$/;if(!rules)return isValid;if(rules.required)isValid=value.trim()!==\"\"&&isValid;if(rules.minLength)isValid=value.length>=rules.minLength&&isValid;if(rules.maxLength)isValid=value.length<=rules.minLength&&isValid;if(rules.isEmail)isValid=patternEmail.test(value)&&isValid;if(rules.isNumeric)isValid=patternNumeric.test(value)&&isValid;return isValid;};","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","patternEmail","patternNumeric","required","trim","minLength","length","maxLength","isEmail","test","isNumeric"],"mappings":"4KAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAAYC,iBAAZ,CAAkC,CAC5D,sCACKD,SADL,EAEKC,iBAFL,EAID,CALM,CAMP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,KAAR,CAAkB,CAC7C,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA;AACA,GAAMC,CAAAA,YAAY,CAAG,wJAArB,CACA;AACA,GAAMC,CAAAA,cAAc,CAAG,OAAvB,CACA,GAAI,CAACH,KAAL,CAAY,MAAOC,CAAAA,OAAP,CACZ,GAAID,KAAK,CAACI,QAAV,CAAoBH,OAAO,CAAGF,KAAK,CAACM,IAAN,KAAiB,EAAjB,EAAuBJ,OAAjC,CACpB,GAAID,KAAK,CAACM,SAAV,CAAqBL,OAAO,CAAGF,KAAK,CAACQ,MAAN,EAAgBP,KAAK,CAACM,SAAtB,EAAmCL,OAA7C,CACrB,GAAID,KAAK,CAACQ,SAAV,CAAqBP,OAAO,CAAGF,KAAK,CAACQ,MAAN,EAAgBP,KAAK,CAACM,SAAtB,EAAmCL,OAA7C,CACrB,GAAID,KAAK,CAACS,OAAV,CAAmBR,OAAO,CAAGC,YAAY,CAACQ,IAAb,CAAkBX,KAAlB,GAA4BE,OAAtC,CACnB,GAAID,KAAK,CAACW,SAAV,CAAqBV,OAAO,CAAGE,cAAc,CAACO,IAAf,CAAoBX,KAApB,GAA8BE,OAAxC,CACrB,MAAOA,CAAAA,OAAP,CACD,CAbM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  // eslint-disable-next-line\n  const patternEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // eslint-disable-next-line\n  const patternNumeric = /^\\d+$/;\n  if (!rules) return isValid;\n  if (rules.required) isValid = value.trim() !== \"\" && isValid;\n  if (rules.minLength) isValid = value.length >= rules.minLength && isValid;\n  if (rules.maxLength) isValid = value.length <= rules.minLength && isValid;\n  if (rules.isEmail) isValid = patternEmail.test(value) && isValid;\n  if (rules.isNumeric) isValid = patternNumeric.test(value) && isValid;\n  return isValid;\n};\n"]},"metadata":{},"sourceType":"module"}