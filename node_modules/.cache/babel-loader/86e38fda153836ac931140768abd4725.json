{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      durationTime: 0,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.checkoutNow = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // //alert(\"You continue!\");\n      const queryParams = [];\n\n      for (const i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      queryParams.push(\"duration=\" + this.state.durationTime);\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryParams.join(\"&\")\n      });\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          price: this.props.totalPrice,\n          perchasable: !this.updatePerchaseState(this.props.ingredients),\n          checkout: this.checkoutNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice,\n        durationTime: this.props.durationTime,\n        closeModal: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.loading) orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 44\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice,\n    durationTime: state.durationTime\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","withErrorHandler","Spinner","actionTypes","connect","BurgerBuilder","state","durationTime","purchasing","loading","error","checkoutNow","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","totalPrice","props","history","pathname","search","join","componentWillMount","get","then","response","data","catch","updatePerchaseState","sum","Object","values","reduce","acc","curr","render","disabledInfo","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    durationTime: 0,\n    purchasing: false,\n    loading: false,\n    error: false,\n  };\n  componentWillMount() {\n    axios\n      .get(\n        \"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\"\n      )\n      .then((response) => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch((error) => {\n        this.setState({\n          error: true,\n        });\n      });\n  }\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    return sum > 0;\n  }\n\n  checkoutNow = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n\n  purchaseContinueHandler = () => {\n    // //alert(\"You continue!\");\n    const queryParams = [];\n    for (const i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    queryParams.push(\"duration=\" + this.state.durationTime);\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryParams.join(\"&\"),\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ingredients,\n    };\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.props.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ingredients} />\n\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            perchasable={!this.updatePerchaseState(this.props.ingredients)}\n            checkout={this.checkoutNow}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n          durationTime={this.props.durationTime}\n          closeModal={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n        />\n      );\n    }\n    if (this.state.loading) orderSummary = <Spinner />;\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice,\n    durationTime: state.durationTime,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) =>\n      dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\n    onIngredientRemoved: (ingName) =>\n      dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName,\n      }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}