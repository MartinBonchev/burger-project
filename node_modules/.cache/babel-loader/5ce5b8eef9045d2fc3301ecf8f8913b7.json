{"ast":null,"code":"import _defineProperty from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from\"../actions/actionTypes\";var initialState={ingredients:null,totalPrice:4,erorr:false};var INGREDIENT_PRICES={Salad:0.5,Cheese:0.5,Bacon:1,Meat:2};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.ADD_INGREDIENT:return _objectSpread(_objectSpread({},state),{},{ingredients:_objectSpread(_objectSpread({},state.ingredients),{},_defineProperty({},action.ingredientName,state.ingredients[action.ingredientName]+1)),totalPrice:state.totalPrice+INGREDIENT_PRICES[action.ingredientName]});case actionTypes.REMOVE_INGREDIENT:return _objectSpread(_objectSpread({},state),{},{ingredients:_objectSpread(_objectSpread({},state.ingredients),{},_defineProperty({},action.ingredientName,state.ingredients[action.ingredientName]-1)),totalPrice:state.totalPrice-INGREDIENT_PRICES[action.ingredientName]});case actionTypes.SET_INGREDIENTS:return _objectSpread(_objectSpread({},state),{},{ingredients:action.ingredients,totalPrice:4,erorr:false});case actionTypes.FETCH_INGREDIENTS_FAILED:return _objectSpread(_objectSpread({},state),{},{error:true});default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","erorr","INGREDIENT_PRICES","Salad","Cheese","Bacon","Meat","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","error"],"mappings":"2VAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,WAAW,CAAE,IADM,CAEnBC,UAAU,CAAE,CAFO,CAGnBC,KAAK,CAAE,KAHY,CAArB,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,KAAK,CAAE,GADiB,CAExBC,MAAM,CAAE,GAFgB,CAGxBC,KAAK,CAAE,CAHiB,CAIxBC,IAAI,CAAE,CAJkB,CAA1B,CAOA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBV,YAAyB,IAAXW,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKb,CAAAA,WAAW,CAACc,cAAjB,CACE,sCACKH,KADL,MAEET,WAAW,gCACNS,KAAK,CAACT,WADA,wBAERU,MAAM,CAACG,cAFC,CAEgBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,EAA2C,CAF3D,EAFb,CAMEZ,UAAU,CAAEQ,KAAK,CAACR,UAAN,CAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR,CANlD,GAQF,IAAKf,CAAAA,WAAW,CAACgB,iBAAjB,CACE,sCACKL,KADL,MAEET,WAAW,gCACNS,KAAK,CAACT,WADA,wBAERU,MAAM,CAACG,cAFC,CAEgBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,EAA2C,CAF3D,EAFb,CAMEZ,UAAU,CAAEQ,KAAK,CAACR,UAAN,CAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR,CANlD,GAQF,IAAKf,CAAAA,WAAW,CAACiB,eAAjB,CACE,sCACKN,KADL,MAEET,WAAW,CAAEU,MAAM,CAACV,WAFtB,CAGEC,UAAU,CAAE,CAHd,CAIEC,KAAK,CAAE,KAJT,GAOF,IAAKJ,CAAAA,WAAW,CAACkB,wBAAjB,CACE,sCACKP,KADL,MAEEQ,KAAK,CAAE,IAFT,GAIF,QACE,MAAOR,CAAAA,KAAP,CAjCJ,CAmCD,CApCD,CAsCA,cAAeD,CAAAA,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  erorr: false,\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        totalPrice: 4,\n        erorr: false,\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}