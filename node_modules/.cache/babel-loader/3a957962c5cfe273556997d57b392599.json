{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/components/Burger/BuildControls/BuildControls.js\";\nimport React from \"react\";\nimport classes from \"./BuildControls.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controls = [{\n  label: \"Salad\",\n  type: \"Salad\"\n}, {\n  label: \"Bacon\",\n  type: \"Bacon\"\n}, {\n  label: \"Cheese\",\n  type: \"Cheese\"\n}, {\n  label: \"Meat\",\n  type: \"Meat\"\n}];\n\nconst buildControls = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: classes.BuildControls,\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Current price: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [props.price.toFixed(2), \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), controls.map(el => /*#__PURE__*/_jsxDEV(BuildControl, {\n    label: el.label,\n    added: () => props.ingredientAdded(el.type),\n    removed: () => props.ingredientRemoved(el.type),\n    disabled: props.disabled[el.type],\n    isPerchasable: props.isPerchasable\n  }, el.label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes.OrderButton,\n    disabled: props.perchasable,\n    onClick: props.checkout,\n    children: \"ORDER NOW\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\nexport default buildControls;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/components/Burger/BuildControls/BuildControls.js"],"names":["React","classes","BuildControl","controls","label","type","buildControls","props","BuildControls","price","toFixed","map","el","ingredientAdded","ingredientRemoved","disabled","isPerchasable","OrderButton","perchasable","checkout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AACA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADe,EAKf;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALe,EASf;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATe,EAaf;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbe,CAAjB;;AAmBA,MAAMC,aAAa,GAAIC,KAAD,iBACpB;AAAK,EAAA,SAAS,EAAEN,OAAO,CAACO,aAAxB;AAAA,0BACE;AAAA,+CACiB;AAAA,iBAASD,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIGP,QAAQ,CAACQ,GAAT,CAAcC,EAAD,iBACZ,QAAC,YAAD;AAEE,IAAA,KAAK,EAAEA,EAAE,CAACR,KAFZ;AAGE,IAAA,KAAK,EAAE,MAAMG,KAAK,CAACM,eAAN,CAAsBD,EAAE,CAACP,IAAzB,CAHf;AAIE,IAAA,OAAO,EAAE,MAAME,KAAK,CAACO,iBAAN,CAAwBF,EAAE,CAACP,IAA3B,CAJjB;AAKE,IAAA,QAAQ,EAAEE,KAAK,CAACQ,QAAN,CAAeH,EAAE,CAACP,IAAlB,CALZ;AAME,IAAA,aAAa,EAAEE,KAAK,CAACS;AANvB,KACOJ,EAAE,CAACR,KADV;AAAA;AAAA;AAAA;AAAA,UADD,CAJH,eAcE;AACE,IAAA,SAAS,EAAEH,OAAO,CAACgB,WADrB;AAEE,IAAA,QAAQ,EAAEV,KAAK,CAACW,WAFlB;AAGE,IAAA,OAAO,EAAEX,KAAK,CAACY,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAwBA,eAAeb,aAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./BuildControls.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\nconst controls = [\n  {\n    label: \"Salad\",\n    type: \"Salad\",\n  },\n  {\n    label: \"Bacon\",\n    type: \"Bacon\",\n  },\n  {\n    label: \"Cheese\",\n    type: \"Cheese\",\n  },\n  {\n    label: \"Meat\",\n    type: \"Meat\",\n  },\n];\n\nconst buildControls = (props) => (\n  <div className={classes.BuildControls}>\n    <p>\n      Current price: <strong>{props.price.toFixed(2)}$</strong>\n    </p>\n    {controls.map((el) => (\n      <BuildControl\n        key={el.label}\n        label={el.label}\n        added={() => props.ingredientAdded(el.type)}\n        removed={() => props.ingredientRemoved(el.type)}\n        disabled={props.disabled[el.type]}\n        isPerchasable={props.isPerchasable}\n      />\n    ))}\n    <button\n      className={classes.OrderButton}\n      disabled={props.perchasable}\n      onClick={props.checkout}\n    >\n      ORDER NOW\n    </button>\n  </div>\n);\nexport default buildControls;\n"]},"metadata":{},"sourceType":"module"}