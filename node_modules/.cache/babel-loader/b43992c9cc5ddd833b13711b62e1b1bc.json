{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      durationTime: 0,\n      perchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatesIngredients = { ...this.state.ingredients\n      };\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatesIngredients\n      });\n      this.updatePerchaseState(updatesIngredients);\n      this.deliveryDurationCalculator(updatesIngredients);\n    };\n\n    this.deliveryDurationCalculator = ingredients => {\n      let totalIngredients = 0;\n      let duration = null;\n\n      for (const ingredient in ingredients) {\n        totalIngredients += ingredients[ingredient];\n      }\n\n      totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n        return acc + Number(curr);\n      }, 0);\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      this.setState({\n        durationTime: duration\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatesIngredients = { ...this.state.ingredients\n      };\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatesIngredients\n      });\n      this.updatePerchaseState(updatesIngredients);\n      this.deliveryDurationCalculator(updatesIngredients);\n    };\n\n    this.checkoutNow = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // //alert(\"You continue!\");\n      const queryParams = [];\n\n      for (const i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + this.state.totalPrice);\n      queryParams.push(\"duration=\" + this.state.durationTime);\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryParams.join(\"&\")\n      });\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    this.setState({\n      perchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          perchasable: !this.state.perchasable,\n          checkout: this.checkoutNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        durationTime: this.state.durationTime,\n        closeModal: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.loading) orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 44\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","withErrorHandler","Spinner","actionTypes","connect","INGREDIENT_PRICES","Salad","Cheese","Bacon","Meat","BurgerBuilder","state","ingredients","totalPrice","durationTime","perchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatesIngredients","priceAddition","oldPrice","newPrice","setState","updatePerchaseState","deliveryDurationCalculator","totalIngredients","duration","ingredient","Object","values","reduce","acc","curr","Number","removeIngredientHandler","checkoutNow","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","props","history","pathname","search","join","componentWillMount","get","then","response","data","catch","sum","render","disabledInfo","key","orderSummary","burger","mapStateToProps","mapDispatchToProps","dispatch","onIngredientAdded","ingName","ADD_INGREDIENT","ingredientName","onIngredientRemoved","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actionTypes from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: null,\n    totalPrice: 4,\n    durationTime: 0,\n    perchasable: false,\n    purchasing: false,\n    loading: false,\n    error: false,\n  };\n  componentWillMount() {\n    axios\n      .get(\n        \"https://broject-burger-default-rtdb.firebaseio.com/ingredients.json\"\n      )\n      .then((response) => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch((error) => {\n        this.setState({\n          error: true,\n        });\n      });\n  }\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    this.setState({ perchasable: sum > 0 });\n  }\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatesIngredients = {\n      ...this.state.ingredients,\n    };\n    updatesIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatesIngredients });\n    this.updatePerchaseState(updatesIngredients);\n    this.deliveryDurationCalculator(updatesIngredients);\n  };\n  deliveryDurationCalculator = (ingredients) => {\n    let totalIngredients = 0;\n    let duration = null;\n    for (const ingredient in ingredients) {\n      totalIngredients += ingredients[ingredient];\n    }\n    totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + Number(curr);\n    }, 0);\n\n    if (totalIngredients >= 1) duration = 15;\n    if (totalIngredients >= 4) duration = 20;\n    if (totalIngredients >= 6) duration = 30;\n    if (totalIngredients >= 10) duration = 60;\n    this.setState({\n      durationTime: duration,\n    });\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatesIngredients = {\n      ...this.state.ingredients,\n    };\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    updatesIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatesIngredients });\n    this.updatePerchaseState(updatesIngredients);\n    this.deliveryDurationCalculator(updatesIngredients);\n  };\n\n  checkoutNow = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n  purchaseContinueHandler = () => {\n    // //alert(\"You continue!\");\n    const queryParams = [];\n    for (const i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    queryParams.push(\"duration=\" + this.state.durationTime);\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryParams.join(\"&\"),\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients,\n    };\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            price={this.state.totalPrice}\n            perchasable={!this.state.perchasable}\n            checkout={this.checkoutNow}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.state.ingredients}\n          price={this.state.totalPrice}\n          durationTime={this.state.durationTime}\n          closeModal={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n        />\n      );\n    }\n    if (this.state.loading) orderSummary = <Spinner />;\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) =>\n      dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\n    onIngredientRemoved: (ingName) =>\n      dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName,\n      }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}