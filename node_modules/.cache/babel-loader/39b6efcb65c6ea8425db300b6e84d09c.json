{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0\n  },\n  totalPrice: 4,\n  durationTime: 0,\n  perchasable: false // purchasing: false,\n  // loading: false,\n  // error: false,\n\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2\n};\n\nconst deliveryDurationCalculator = ingredients => {\n  let totalIngredients = 0;\n  let duration = null; // for (const ingredient in ingredients) {\n  //   totalIngredients += ingredients[ingredient];\n  // }\n\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    return acc + Number(curr);\n  }, 0);\n  console.log(totalIngredients);\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        durationTime: deliveryDurationCalculator(state.ingredients)\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        durationTime: deliveryDurationCalculator(state.ingredients)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","Salad","Bacon","Cheese","Meat","totalPrice","durationTime","perchasable","INGREDIENT_PRICES","deliveryDurationCalculator","totalIngredients","duration","Object","values","reduce","acc","curr","Number","console","log","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,MAAM,EAAE,CAHG;AAIXC,IAAAA,IAAI,EAAE;AAJK,GADM;AAOnBC,EAAAA,UAAU,EAAE,CAPO;AAQnBC,EAAAA,YAAY,EAAE,CARK;AASnBC,EAAAA,WAAW,EAAE,KATM,CAUnB;AACA;AACA;;AAZmB,CAArB;AAcA,MAAMC,iBAAiB,GAAG;AACxBP,EAAAA,KAAK,EAAE,GADiB;AAExBE,EAAAA,MAAM,EAAE,GAFgB;AAGxBD,EAAAA,KAAK,EAAE,CAHiB;AAIxBE,EAAAA,IAAI,EAAE;AAJkB,CAA1B;;AAOA,MAAMK,0BAA0B,GAAIT,WAAD,IAAiB;AAClD,MAAIU,gBAAgB,GAAG,CAAvB;AACA,MAAIC,QAAQ,GAAG,IAAf,CAFkD,CAGlD;AACA;AACA;;AAEAD,EAAAA,gBAAgB,GAAGE,MAAM,CAACC,MAAP,CAAcb,WAAd,EAA2Bc,MAA3B,CAAkC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClE,WAAOD,GAAG,GAAGE,MAAM,CAACD,IAAD,CAAnB;AACD,GAFkB,EAEhB,CAFgB,CAAnB;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AACA,MAAIA,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,EAAxB,EAA4BC,QAAQ,GAAG,EAAX;AAC5B,SAAOA,QAAP;AACD,CAhBD;;AAkBA,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGtB,YAAT,EAAuBuB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,WAAW,CAAC0B,cAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELrB,QAAAA,WAAW,EAAE,EACX,GAAGqB,KAAK,CAACrB,WADE;AAEX,WAACsB,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACrB,WAAN,CAAkBsB,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLpB,QAAAA,UAAU,EAAEgB,KAAK,CAAChB,UAAN,GAAmBG,iBAAiB,CAACc,MAAM,CAACG,cAAR,CAN3C;AAOLnB,QAAAA,YAAY,EAAEG,0BAA0B,CAACY,KAAK,CAACrB,WAAP;AAPnC,OAAP;;AASF,SAAKF,WAAW,CAAC4B,iBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELrB,QAAAA,WAAW,EAAE,EACX,GAAGqB,KAAK,CAACrB,WADE;AAEX,WAACsB,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACrB,WAAN,CAAkBsB,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLpB,QAAAA,UAAU,EAAEgB,KAAK,CAAChB,UAAN,GAAmBG,iBAAiB,CAACc,MAAM,CAACG,cAAR,CAN3C;AAOLnB,QAAAA,YAAY,EAAEG,0BAA0B,CAACY,KAAK,CAACrB,WAAP;AAPnC,OAAP;;AASF;AACE,aAAOqB,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0,\n  },\n  totalPrice: 4,\n  durationTime: 0,\n  perchasable: false,\n  // purchasing: false,\n  // loading: false,\n  // error: false,\n};\nconst INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Cheese: 0.5,\n  Bacon: 1,\n  Meat: 2,\n};\n\nconst deliveryDurationCalculator = (ingredients) => {\n  let totalIngredients = 0;\n  let duration = null;\n  // for (const ingredient in ingredients) {\n  //   totalIngredients += ingredients[ingredient];\n  // }\n\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    return acc + Number(curr);\n  }, 0);\n  console.log(totalIngredients);\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        durationTime: deliveryDurationCalculator(state.ingredients),\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        durationTime: deliveryDurationCalculator(state.ingredients),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}