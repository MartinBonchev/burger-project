{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.onTryAuthSignup();\n  }\n\n  render() {\n    let routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Auth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.isLogged) routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/checkout\",\n        component: Checkout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/orders\",\n        component: Orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        component: Logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLogged: state.auth.token\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAuthSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/App.js"],"names":["React","Component","Layout","BurgerBuilder","Switch","Route","withRouter","Checkout","Orders","Auth","Logout","connect","actions","App","constructor","props","onTryAuthSignup","render","routes","isLogged","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAC1Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,gBACR,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAET;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AAMA,QAAI,KAAKM,KAAL,CAAWI,QAAf,EACED,MAAM,gBACJ,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEf;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEI;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQF,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,kBAASQ;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA3ByB;;AA8B5B,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,QAAQ,EAAEE,KAAK,CAACC,IAAN,CAAWC;AADa,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,eAAe,EAAE,MAAMS,QAAQ,CAACb,OAAO,CAACc,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAepB,UAAU,CAACK,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.onTryAuthSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/login\" component={Auth} />\n      </Switch>\n    );\n\n    if (this.props.isLogged)\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n        </Switch>\n      );\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLogged: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAuthSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}