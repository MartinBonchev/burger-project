{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Orders/Orders.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.props.loading ? this.props.orders.map(el => {\n        return /*#__PURE__*/_jsxDEV(Order, {\n          ingredients: el.ingredients,\n          price: el.price,\n          customer: el.orderData,\n          deliveryDuration: el.duration\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token,\n  userId: state.auth.userId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchOrders: (token, userId) => dispatch(actions.fetchedOrders(token, userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Orders/Orders.js"],"names":["React","Component","axios","withErrorHandler","Order","Spinner","actions","connect","Orders","componentDidMount","props","onFetchOrders","token","userId","render","loading","orders","map","el","ingredients","price","orderData","duration","id","mapStateToProps","state","order","auth","mapDispatchToProps","dispatch","fetchedOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,EAA2C,KAAKF,KAAL,CAAWG,MAAtD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,CAAC,KAAKJ,KAAL,CAAWK,OAAZ,GACC,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAuBC,EAAD,IAAQ;AAC5B,4BACE,QAAC,KAAD;AAEE,UAAA,WAAW,EAAEA,EAAE,CAACC,WAFlB;AAGE,UAAA,KAAK,EAAED,EAAE,CAACE,KAHZ;AAIE,UAAA,QAAQ,EAAEF,EAAE,CAACG,SAJf;AAKE,UAAA,gBAAgB,EAAEH,EAAE,CAACI;AALvB,WACOJ,EAAE,CAACK,EADV;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CADD,gBAaC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAzB4B;;AA4B/B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,MAAM,EAAES,KAAK,CAACC,KAAN,CAAYV,MADc;AAElCD,EAAAA,OAAO,EAAEU,KAAK,CAACC,KAAN,CAAYX,OAFa;AAGlCH,EAAAA,KAAK,EAAEa,KAAK,CAACE,IAAN,CAAWf,KAHgB;AAIlCC,EAAAA,MAAM,EAAEY,KAAK,CAACE,IAAN,CAAWd;AAJe,CAAZ,CAAxB;;AAOA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KACbgB,QAAQ,CAACvB,OAAO,CAACwB,aAAR,CAAsBlB,KAAtB,EAA6BC,MAA7B,CAAD;AAF8B,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CACpBiB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbzB,gBAAgB,CAACK,MAAD,EAASN,KAAT,CAHH,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.props.loading ? (\n          this.props.orders.map((el) => {\n            return (\n              <Order\n                key={el.id}\n                ingredients={el.ingredients}\n                price={el.price}\n                customer={el.orderData}\n                deliveryDuration={el.duration}\n              />\n            );\n          })\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token,\n  userId: state.auth.userId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchOrders: (token, userId) =>\n    dispatch(actions.fetchedOrders(token, userId)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}