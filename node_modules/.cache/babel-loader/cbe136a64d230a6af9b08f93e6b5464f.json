{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Orders/Orders.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    if (this.props.token) this.props.onFetchOrders(this.props.token);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.props.loading && this.props.token ? this.props.orders.map(el => {\n        console.log(el.price);\n        return /*#__PURE__*/_jsxDEV(Order, {\n          ingredients: el.ingredients,\n          price: el.price,\n          customer: el.orderData,\n          deliveryDuration: el.duration\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this);\n      }) : this.props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchOrders: token => dispatch(actions.fetchedOrders(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Orders/Orders.js"],"names":["React","Component","axios","withErrorHandler","Order","Spinner","actions","connect","Redirect","Orders","componentDidMount","props","token","onFetchOrders","render","loading","orders","map","el","console","log","price","ingredients","orderData","duration","id","mapStateToProps","state","order","auth","mapDispatchToProps","dispatch","fetchedOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB,KAAKD,KAAL,CAAWE,aAAX,CAAyB,KAAKF,KAAL,CAAWC,KAApC;AACvB;;AACDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,CAAC,KAAKH,KAAL,CAAWI,OAAZ,IAAuB,KAAKJ,KAAL,CAAWC,KAAlC,GACC,KAAKD,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAuBC,EAAD,IAAQ;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACG,KAAf;AACA,4BACE,QAAC,KAAD;AAEE,UAAA,WAAW,EAAEH,EAAE,CAACI,WAFlB;AAGE,UAAA,KAAK,EAAEJ,EAAE,CAACG,KAHZ;AAIE,UAAA,QAAQ,EAAEH,EAAE,CAACK,SAJf;AAKE,UAAA,gBAAgB,EAAEL,EAAE,CAACM;AALvB,WACON,EAAE,CAACO,EADV;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAXD,CADD,GAaG,KAAKd,KAAL,CAAWI,OAAX,gBACF,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADE,gBAGF,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA3B4B;;AA8B/B,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,MAAM,EAAEW,KAAK,CAACC,KAAN,CAAYZ,MADc;AAElCD,EAAAA,OAAO,EAAEY,KAAK,CAACC,KAAN,CAAYb,OAFa;AAGlCH,EAAAA,KAAK,EAAEe,KAAK,CAACE,IAAN,CAAWjB;AAHgB,CAAZ,CAAxB;;AAMA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,aAAa,EAAGD,KAAD,IAAWmB,QAAQ,CAACzB,OAAO,CAAC0B,aAAR,CAAsBpB,KAAtB,CAAD;AADM,CAAf,CAA3B;;AAGA,eAAeL,OAAO,CACpBmB,eADoB,EAEpBI,kBAFoB,CAAP,CAGb3B,gBAAgB,CAACM,MAAD,EAASP,KAAT,CAHH,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nclass Orders extends Component {\n  componentDidMount() {\n    if (this.props.token) this.props.onFetchOrders(this.props.token);\n  }\n  render() {\n    return (\n      <div>\n        {!this.props.loading && this.props.token ? (\n          this.props.orders.map((el) => {\n            console.log(el.price);\n            return (\n              <Order\n                key={el.id}\n                ingredients={el.ingredients}\n                price={el.price}\n                customer={el.orderData}\n                deliveryDuration={el.duration}\n              />\n            );\n          })\n        ) : this.props.loading ? (\n          <Spinner />\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchOrders: (token) => dispatch(actions.fetchedOrders(token)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}