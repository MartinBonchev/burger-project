{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\"\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP CODE\"\n          },\n          value: \"\"\n        },\n        country: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\"\n        },\n        deliveryDuration: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\"\n        }\n      },\n      loading: false\n    };\n\n    this.deliveryDurationCalculator = () => {\n      let totalIngredients = 0;\n\n      for (const ingredient in this.props.ingredients) {\n        totalIngredients += this.props.ingredients[ingredient];\n      }\n\n      if (totalIngredients >= 10) return 60;\n      if (totalIngredients >= 6) return 30;\n      if (totalIngredients >= 4) return 20;\n      if (totalIngredients >= 1) return 15;\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/\");\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let formElementsArray = [];\n\n    for (const key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    console.log(this.props);\n    let form = null;\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    } else {\n      form = /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [formElementsArray.map(formElement => {\n          /*#__PURE__*/\n          _jsxDEV(Input, {\n            elementType: formElement.config.elementType,\n            elementConfig: formElement.config.elementConfig,\n            value: formElement.config.value\n          }, formElement.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          clicked: this.orderHandler,\n          children: \"ORDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContactData,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Contact Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryDuration","loading","deliveryDurationCalculator","totalIngredients","ingredient","props","ingredients","orderHandler","event","preventDefault","setState","order","price","post","then","response","history","push","catch","error","render","formElementsArray","key","id","config","console","log","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nclass ContactData extends Component {\n  // name: \"\",\n  //   email: \"\",\n  //   address: {\n  //     street: \"\",\n  //     postalCode: \"\",\n  //   },\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\",\n        },\n        value: \"\",\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\",\n        },\n        value: \"\",\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP CODE\",\n        },\n        value: \"\",\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\",\n        },\n        value: \"\",\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\",\n        },\n        value: \"\",\n      },\n      deliveryDuration: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\",\n        },\n        value: \"\",\n      },\n    },\n    loading: false,\n  };\n  deliveryDurationCalculator = () => {\n    let totalIngredients = 0;\n    for (const ingredient in this.props.ingredients) {\n      totalIngredients += this.props.ingredients[ingredient];\n    }\n    if (totalIngredients >= 10) return 60;\n    if (totalIngredients >= 6) return 30;\n    if (totalIngredients >= 4) return 20;\n    if (totalIngredients >= 1) return 15;\n  };\n  orderHandler = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n    };\n    axios\n      .post(\"/orders.json\", order)\n      .then((response) => {\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n      });\n  };\n  render() {\n    let formElementsArray = [];\n    for (const key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key],\n      });\n    }\n    console.log(this.props);\n    let form = null;\n    if (this.state.loading) {\n      form = <Spinner />;\n    } else {\n      form = (\n        <form>\n          {formElementsArray.map((formElement) => {\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n            />;\n          })}\n          <Button btnType=\"Success\" clicked={this.orderHandler}>\n            ORDER\n          </Button>\n        </form>\n      );\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}