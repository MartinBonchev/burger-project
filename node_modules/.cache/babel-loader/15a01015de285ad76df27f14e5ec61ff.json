{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        initialized: false,\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.responseInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n      this.setState({\n        initialized: true\n      });\n    }\n\n    render() {\n      const {\n        initialized\n      } = this.state;\n      if (!initialized) return null;\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.error,\n          modalClosed: this.errorConfirmedHandler,\n          children: this.state.error ? this.state.error.message : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","initialized","error","errorConfirmedHandler","setState","componentDidMount","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AACpD,SAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BM,KAD6B,GACrB;AACNC,QAAAA,WAAW,EAAE,KADP;AAENC,QAAAA,KAAK,EAAE;AAFD,OADqB;;AAAA,WAoB7BC,qBApB6B,GAoBL,MAAM;AAC5B,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAtB4B;AAAA;;AAM7BG,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,kBAAL,GAA0BP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AAChE,aAAKN,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOQ,GAAP;AACD,OAHyB,CAA1B;AAIA,WAAKC,mBAAL,GAA2BZ,KAAK,CAACQ,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CACxBI,GAAD,IAASA,GADgB,EAExBX,KAAD,IAAW;AACT,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD,OAJwB,CAA3B;AAMA,WAAKE,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;AAKDa,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEb,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AACA,UAAI,CAACC,WAAL,EAAkB,OAAO,IAAP;AAClB,0BACE,QAAC,GAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,KADnB;AAEE,UAAA,WAAW,EAAE,KAAKC,qBAFpB;AAAA,oBAIG,KAAKH,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWE,KAAX,CAAiBa,OAApC,GAA8C;AAJjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,gBAAD,OAAsB,KAAKC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;AArC4B,GAA/B;AAuCD,CAxCD;;AA0CA,eAAenB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      initialized: false,\n      error: null,\n    };\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.responseInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n        }\n      );\n      this.setState({ initialized: true });\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n    render() {\n      const { initialized } = this.state;\n      if (!initialized) return null;\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}