{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/components/UI/Input/Input.js\";\nimport React from \"react\";\nimport classes from \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"textarea\":\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"select\":\n      inputElement = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Pick a free drink!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: inputClasses.join(\" \"),\n          value: props.value,\n          onChange: props.change,\n          children: props.elementConfig.options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              onChange: props.change,\n              children: option.displayValue\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(\" \"),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/components/UI/Input/Input.js"],"names":["React","classes","input","props","inputElement","inputClasses","InputElement","invalid","push","Invalid","elementType","join","elementConfig","value","change","options","map","option","displayValue","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AAEA,MAAIH,KAAK,CAACI,OAAV,EAAmB;AACjBF,IAAAA,YAAY,CAACG,IAAb,CAAkBP,OAAO,CAACQ,OAA1B;AACD;;AAED,UAAQN,KAAK,CAACO,WAAd;AACE,SAAK,OAAL;AACEN,MAAAA,YAAY,gBACV;AACE,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADb;AAAA,WAEMR,KAAK,CAACS,aAFZ;AAGE,QAAA,KAAK,EAAET,KAAK,CAACU,KAHf;AAIE,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AAQA;;AACF,SAAK,UAAL;AACEV,MAAAA,YAAY,gBACV;AACE,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADb;AAAA,WAEMR,KAAK,CAACS,aAFZ;AAGE,QAAA,KAAK,EAAET,KAAK,CAACU,KAHf;AAIE,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AAQA;;AACF,SAAK,QAAL;AACEV,MAAAA,YAAY,gBACV;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADb;AAEE,UAAA,KAAK,EAAER,KAAK,CAACU,KAFf;AAGE,UAAA,QAAQ,EAAEV,KAAK,CAACW,MAHlB;AAAA,oBAKGX,KAAK,CAACS,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAiCC,MAAD,IAAY;AAC3C,gCACE;AAEE,cAAA,KAAK,EAAEA,MAAM,CAACJ,KAFhB;AAGE,cAAA,QAAQ,EAAEV,KAAK,CAACW,MAHlB;AAAA,wBAKGG,MAAM,CAACC;AALV,eACOD,MAAM,CAACJ,KADd;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAVA;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAsBA;;AACF;AACET,MAAAA,YAAY,gBACV;AACE,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADb;AAAA,WAEMR,KAAK,CAACS,aAFZ;AAGE,QAAA,KAAK,EAAET,KAAK,CAACU,KAHf;AAIE,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF;AA9CJ;;AAwDA,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACkB,KAAxB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAElB,OAAO,CAACmB,KAA1B;AAAA,gBAAkCjB,KAAK,CAACkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtED;;AAuEA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Input.css\";\nconst input = (props) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <div>\n          <h4>Pick a free drink!</h4>\n          <select\n            className={inputClasses.join(\" \")}\n            value={props.value}\n            onChange={props.change}\n          >\n            {props.elementConfig.options.map((option) => {\n              return (\n                <option\n                  key={option.value}\n                  value={option.value}\n                  onChange={props.change}\n                >\n                  {option.displayValue}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default input;\n"]},"metadata":{},"sourceType":"module"}