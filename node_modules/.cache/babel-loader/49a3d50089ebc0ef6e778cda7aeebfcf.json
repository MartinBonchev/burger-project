{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0\n  },\n  totalPrice: 4,\n  durationTime: 0 // perchasable: false,\n  // purchasing: false,\n  // loading: false,\n  // error: false,\n\n};\n\nconst deliveryDurationCalculator = ingredients => {\n  let totalIngredients = 0;\n  let duration = null; // for (const ingredient in ingredients) {\n  //   totalIngredients += ingredients[ingredient];\n  // }\n\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    return acc + Number(curr);\n  }, 0);\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","Salad","Bacon","Cheese","Meat","totalPrice","durationTime","deliveryDurationCalculator","totalIngredients","duration","Object","values","reduce","acc","curr","Number","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,MAAM,EAAE,CAHG;AAIXC,IAAAA,IAAI,EAAE;AAJK,GADM;AAOnBC,EAAAA,UAAU,EAAE,CAPO;AAQnBC,EAAAA,YAAY,EAAE,CARK,CASnB;AACA;AACA;AACA;;AAZmB,CAArB;;AAeA,MAAMC,0BAA0B,GAAIP,WAAD,IAAiB;AAClD,MAAIQ,gBAAgB,GAAG,CAAvB;AACA,MAAIC,QAAQ,GAAG,IAAf,CAFkD,CAGlD;AACA;AACA;;AACAD,EAAAA,gBAAgB,GAAGE,MAAM,CAACC,MAAP,CAAcX,WAAd,EAA2BY,MAA3B,CAAkC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClE,WAAOD,GAAG,GAAGE,MAAM,CAACD,IAAD,CAAnB;AACD,GAFkB,EAEhB,CAFgB,CAAnB;AAIA,MAAIN,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,CAAxB,EAA2BC,QAAQ,GAAG,EAAX;AAC3B,MAAID,gBAAgB,IAAI,EAAxB,EAA4BC,QAAQ,GAAG,EAAX;AAC5B,SAAOA,QAAP;AACD,CAfD;;AAiBA,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,WAAW,CAACsB,cAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELjB,QAAAA,WAAW,EAAE,EACX,GAAGiB,KAAK,CAACjB,WADE;AAEX,WAACkB,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACjB,WAAN,CAAkBkB,MAAM,CAACG,cAAzB,IAA2C;AAFzD;AAFR,OAAP;;AAOF,SAAKvB,WAAW,CAACwB,iBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELjB,QAAAA,WAAW,EAAE,EACX,GAAGiB,KAAK,CAACjB,WADE;AAEX,WAACkB,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACjB,WAAN,CAAkBkB,MAAM,CAACG,cAAzB,IAA2C;AAFzD;AAFR,OAAP;;AAOF;AACE,aAAOJ,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  ingredients: {\n    Salad: 0,\n    Bacon: 0,\n    Cheese: 0,\n    Meat: 0,\n  },\n  totalPrice: 4,\n  durationTime: 0,\n  // perchasable: false,\n  // purchasing: false,\n  // loading: false,\n  // error: false,\n};\n\nconst deliveryDurationCalculator = (ingredients) => {\n  let totalIngredients = 0;\n  let duration = null;\n  // for (const ingredient in ingredients) {\n  //   totalIngredients += ingredients[ingredient];\n  // }\n  totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n    return acc + Number(curr);\n  }, 0);\n\n  if (totalIngredients >= 1) duration = 15;\n  if (totalIngredients >= 4) duration = 20;\n  if (totalIngredients >= 6) duration = 30;\n  if (totalIngredients >= 10) duration = 60;\n  return duration;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}