{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.tipe) {\n    case actionTypes.AUTH_START:\n      return { ...state,\n        error: null,\n        loading: true\n      };\n\n    case actionTypes.AUTH_SUCCESS:\n      return { ...state,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n      };\n\n    case actionTypes.AUTH_FAIL:\n      return { ...state,\n        error: action.error,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","reducer","state","action","tipe","AUTH_START","AUTH_SUCCESS","idToken","AUTH_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAW,CAACW,UAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,KAAK,EAAE,IAAnB;AAAyBC,QAAAA,OAAO,EAAE;AAAlC,OAAP;;AACF,SAAKN,WAAW,CAACY,YAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACI,OAFT;AAGLT,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAHV;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKN,WAAW,CAACc,SAAjB;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAA1B;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OAAP;;AACF;AACE,aAAOE,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.tipe) {\n    case actionTypes.AUTH_START:\n      return { ...state, error: null, loading: true };\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false,\n      };\n    case actionTypes.AUTH_FAIL:\n      return { ...state, error: action.error, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}