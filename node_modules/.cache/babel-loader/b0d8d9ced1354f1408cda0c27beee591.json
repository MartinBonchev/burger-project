{"ast":null,"code":"var _jsxFileName = \"/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      durationTime: 0,\n      purchasing: false\n    };\n\n    this.checkoutNow = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: !this.state.purchasing\n      });\n    };\n\n    this.deliveryDurationCalculator = ingredients => {\n      let totalIngredients = null;\n      let duration = 0;\n      totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n        acc += Number(curr);\n        return acc;\n      }, 0);\n      if (totalIngredients >= 1) duration = 15;\n      if (totalIngredients >= 4) duration = 20;\n      if (totalIngredients >= 6) duration = 30;\n      if (totalIngredients >= 10) duration = 60;\n      return duration;\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push(\"checkout\");\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.token) this.props.onInitIngredients(this.props.token);\n  }\n\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    let isLogged = null;\n    console.log(this.props.token);\n    if (this.props.token) isLogged = /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 38\n    }, this);\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          price: this.props.totalPrice,\n          perchasable: !this.updatePerchaseState(this.props.ingredients),\n          checkout: this.checkoutNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice,\n        durationTime: this.deliveryDurationCalculator(this.props.ingredients),\n        closeModal: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [isLogged, /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    token: state.auth.token,\n    path: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: token => dispatch(actions.initIngredients(token)),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirect: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","withErrorHandler","Spinner","actions","connect","Redirect","BurgerBuilder","state","durationTime","purchasing","checkoutNow","setState","purchaseCancelHandler","deliveryDurationCalculator","ingredients","totalIngredients","duration","Object","values","reduce","acc","curr","Number","purchaseContinueHandler","props","onInitPurchase","history","push","componentWillMount","token","onInitIngredients","updatePerchaseState","sum","render","isLogged","console","log","disabledInfo","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","totalPrice","mapStateToProps","burgerBuilder","auth","path","authRedirectPath","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","onSetAuthRedirect","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    durationTime: 0,\n    purchasing: false,\n  };\n  componentWillMount() {\n    if (this.props.token) this.props.onInitIngredients(this.props.token);\n  }\n  updatePerchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, curr) => {\n      return acc + curr;\n    }, 0);\n    return sum > 0;\n  }\n\n  checkoutNow = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: !this.state.purchasing });\n  };\n  deliveryDurationCalculator = (ingredients) => {\n    let totalIngredients = null;\n    let duration = 0;\n    totalIngredients = Object.values(ingredients).reduce((acc, curr) => {\n      acc += Number(curr);\n      return acc;\n    }, 0);\n    if (totalIngredients >= 1) duration = 15;\n    if (totalIngredients >= 4) duration = 20;\n    if (totalIngredients >= 6) duration = 30;\n    if (totalIngredients >= 10) duration = 60;\n    return duration;\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"checkout\");\n  };\n  render() {\n    let isLogged = null;\n    console.log(this.props.token);\n    if (this.props.token) isLogged = <Redirect to=\"/login\" />;\n    const disabledInfo = {\n      ...this.props.ingredients,\n    };\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.props.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.props.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ingredients} />\n\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            perchasable={!this.updatePerchaseState(this.props.ingredients)}\n            checkout={this.checkoutNow}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n          durationTime={this.deliveryDurationCalculator(this.props.ingredients)}\n          closeModal={this.purchaseCancelHandler}\n          purchaseContinue={this.purchaseContinueHandler}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        {isLogged}\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    token: state.auth.token,\n    path: state.auth.authRedirectPath,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) =>\n      dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: (token) => dispatch(actions.initIngredients(token)),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirect: (path) => dispatch(actions.setAuthRedirectPath(path)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}