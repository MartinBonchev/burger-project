{"ast":null,"code":"import _defineProperty from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/martinbonchev/coding/udemy/react/burger-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// @ts-nocheck\nimport React,{Component}from\"react\";import Input from\"../../components/UI/Input/Input\";import Button from\"../../components/UI/Button/Button\";import classes from\"./Auth.css\";import*as actions from\"../../store/actions/index\";import{connect}from\"react-redux\";import Spinner from\"../../components/UI/Spinner/Spinner\";import{Redirect}from\"react-router-dom\";import{updateObject,checkValidity}from\"../../store/utility\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={controls:{email:{elementType:\"input\",elementConfig:{type:\"email\",placeholder:\"Email\"},value:\"\",validation:{required:true,isEmail:true},valid:false,touched:false},password:{elementType:\"input\",elementConfig:{type:\"password\",placeholder:\"Password\"},value:\"\",validation:{required:true,minLength:6},valid:false,touched:false}},isSignUp:false};_this.inputChangedHandler=function(event,controlName){var updatedControls=updateObject(_this.state.controls,_defineProperty({},controlName,updateObject(_this.state.controls[controlName],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.controls[controlName].validation),touched:true})));_this.setState({controls:updatedControls});};_this.submitHandler=function(event){event.preventDefault();_this.props.onAuth(_this.state.controls.email.value,_this.state.controls.password.value,_this.state.isSignUp);if(!_this.props.error)_this.props.history.push(\"/\");};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignUp:!prevState.isSignUp};});};return _this;}_createClass(Auth,[{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];var form=null;var errorMessage=null;for(var key in this.state.controls){formElementsArray.push({id:key,config:this.state.controls[key]});}form=formElementsArray.map(function(formElement){return/*#__PURE__*/_jsx(Input,{elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,change:function change(event){return _this2.inputChangedHandler(event,formElement.id);}},formElement.id);});var authRedirect=null;if(this.props.isAuthenticated)authRedirect=/*#__PURE__*/_jsx(Redirect,{to:\"/\"});if(this.props.loading){form=/*#__PURE__*/_jsx(Spinner,{});}if(this.props.error){errorMessage=/*#__PURE__*/_jsx(\"p\",{children:this.props.error});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.Auth,children:[/*#__PURE__*/_jsxs(\"div\",{children:[authRedirect,errorMessage,/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.submitHandler,children:[form,/*#__PURE__*/_jsx(Button,{btnType:\"Success\",children:\"SUBMIT \"})]})]}),/*#__PURE__*/_jsxs(Button,{btnType:\"Danger\",clicked:this.switchAuthModeHandler,children:[\"SWITCH TO \",this.state.isSignUp?\"SIGN IN\":\"SIGN UP\"]})]});}}]);return Auth;}(Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,isAuthenticated:state.auth.token!==null};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignUp){return dispatch(actions.auth(email,password,isSignUp));}};};export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/martinbonchev/coding/udemy/react/burger-project/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","actions","connect","Spinner","Redirect","updateObject","checkValidity","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","error","history","push","switchAuthModeHandler","prevState","formElementsArray","form","errorMessage","key","id","config","map","formElement","authRedirect","isAuthenticated","loading","mapStateToProps","auth","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Auth.css\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport { Redirect } from \"react-router-dom\";\nimport { updateObject, checkValidity } from \"../../store/utility\";\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Email\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n    },\n    isSignUp: false,\n  };\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true,\n      }),\n    });\n\n    this.setState({ controls: updatedControls });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignUp\n    );\n\n    if (!this.props.error) this.props.history.push(\"/\");\n  };\n  switchAuthModeHandler = () => {\n    this.setState((prevState) => {\n      return { isSignUp: !prevState.isSignUp };\n    });\n  };\n  render() {\n    let formElementsArray = [];\n    let form = null;\n    let errorMessage = null;\n    for (const key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    form = formElementsArray.map((formElement) => {\n      return (\n        <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          change={(event) => this.inputChangedHandler(event, formElement.id)}\n        />\n      );\n    });\n    let authRedirect = null;\n    if (this.props.isAuthenticated) authRedirect = <Redirect to=\"/\" />;\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error}</p>;\n    }\n\n    return (\n      <div className={classes.Auth}>\n        <div>\n          {authRedirect}\n          {errorMessage}\n          <form onSubmit={this.submitHandler}>\n            {form}\n            <Button btnType=\"Success\">SUBMIT </Button>\n          </form>\n        </div>\n        <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\n          SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\n        </Button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(actions.auth(email, password, isSignUp)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}